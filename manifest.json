{
	"info": {
		"name": "archipelago_biome",
		"version": 3
	},
	"default_locale": "en",
	"server_init_script": "file(archipelago_biome_server)",
	"aliases": {
		"ai_pack:crab_movement":"file(ai/packs/crab_movement_ai_pack.json)",
		"ai_pack:fishing":"file(ai/packs/fishing_ai_pack.json)",

		"actions:go_fish":				"file(ai/actions/fisher/go_fish_action.lua)",
		"actions:turn_to_face_water":	"file(ai/actions/fisher/turn_to_face_water_action.lua)",
		"actions:fishing_animations":	"file(ai/actions/fisher/fishing_animations_action.lua)",
		"actions:pickup_fish":			"file(ai/actions/fisher/pickup_fish_action.lua)",
		"actions:get_crab":				"file(ai/actions/fisher/get_crab_action.lua)",

		"task_groups:crab_movement": "file(ai/task_groups/crab_task_group.lua)",
		"task_groups:fishing": "file(ai/task_groups/fishing_task_group.lua)",

		"armor:turtle_shield":"file(entities/armor/turtle_shield)",

		"beach:bottle":		"file(entities/beach/bottle)",
		"beach:broken_boat":"file(entities/beach/broken_boat)",
		"beach:oyster":		"file(entities/beach/oyster)",
		"beach:seaweed":	"file(entities/beach/seaweed)",
		"beach:starfish":	"file(entities/beach/starfish)",
		"beach:wave":		"file(entities/beach/wave)",

		"biome:archipelago": "file(data/biome/archipelago.json)",

		"captain_miranda":	"file(entities/humans/captain_miranda)",
		"anya":				"file(entities/humans/anya)",

		"color_map:fish":	"file(data/materials/color_maps/fish_color_map.json)",
		"color_map:octopus":"file(data/materials/color_maps/octopus_color_map.json)",

		"commands:open_crate":"file(data/commands/open_crate)",

		"containers:input_fish_rack": "file(entities/containers/input_fish_rack)",
		"containers:input_bin:food_bin": "file(entities/containers/input_food_bin)",

		"critters:crab":		"file(entities/critters/crab)",
		"critters:sea_turtle":	"file(entities/critters/sea_turtle)",

		"crops:palm_tree_crop": "file(entities/crops/palm_tree_crop)",

		"data:gm_index": "file(data/gm/gm_index.json)",

		"decoration:anchor":			"file(entities/decoration/anchor)",
		"decoration:dock":				"file(entities/decoration/dock)",
		"decoration:dock_leg":			"file(entities/decoration/dock/dock_leg.json)",
		"decoration:dock_spot":			"file(entities/decoration/dock/dock_spot.json)",
		"decoration:fish_container":	"file(entities/decoration/fish_container)",
		"decoration:fruit_container":	"file(entities/decoration/fruit_container)",
		"decoration:hammock":			"file(entities/decoration/hammock)",
		"decoration:lei":				"file(entities/decoration/lei)",
		"decoration:pearl_container":	"file(entities/decoration/pearl_container)",
		"decoration:pirate_flag":		"file(entities/decoration/pirate_flag)",
		"decoration:raft":				"file(entities/decoration/raft)",
		"decoration:sand_castle":		"file(entities/decoration/sand_castle)",
		"decoration:ship_wheel":		"file(entities/decoration/ship_wheel)",
		"decoration:tiki_torch":		"file(entities/decoration/tiki_torch)",

		"effects:bubble_shot":				"file(data/effects/bubble_shot)",
		"effects:cocobomb_effect":			"file(data/effects/cocobomb_effect)",
		"effects:cocobomb_explosion_effect":"file(data/effects/cocobomb_effect/cocobomb_explosion_effect.json)",
		"effects:harvest_coconut_overlay":	"file(data/effects/harvest_coconut_overlay)",
		"effects:harvest_crab_overlay":		"file(data/effects/harvest_crab_overlay)",
		"effects:harvest_fish_overlay":		"file(data/effects/harvest_fish_overlay)",
		"effects:harvest_papaya_overlay":	"file(data/effects/harvest_papaya_overlay)",
		"effects:harvest_pearl_overlay":	"file(data/effects/harvest_pearl_overlay)",
		"effects:no_water_overlay":			"file(data/effects/no_water_overlay)",
		"effects:open_crate":				"file(data/effects/open_crate)",
		"effects:tiki_torch_effect":		"file(data/effects/tiki_torch_effect)",
		"effects:wave_effect":				"file(data/effects/wave_effect)",

		"food:coconut":"file(entities/food/coconut)",
		"food:crab":				 "file(entities/food/crab)",
		"food:crab_cake":			 "file(entities/food/crab_cake)",
		"food:crab_omelette":		 "file(entities/food/crab_omelette)",
		"food:crab_omelette_serving":"file(entities/food/crab_omelette_serving)",
		"food:crab:rotten":			 "file(entities/food/crab/crab_rotten.json)",
		"food:fish":			 "file(entities/food/fish)",
		"food:fish:cooked":		 "file(entities/food/fish_cooked)",
		"food:fish:rotten":		 "file(entities/food/fish/fish_rotten.json)",
		"food:fish_stew":		 "file(entities/food/fish_stew)",
		"food:fish_stew_serving":"file(entities/food/fish_stew_serving)",
		"food:papaya_basket":	"file(entities/food/papaya/papaya_basket)",
		"food:papaya_serving":	"file(entities/food/papaya/papaya_serving)",
		"food:sashimi":"file(entities/food/sashimi)",

		"gizmos:cocobomb":		"file(entities/gizmos/cocobomb)",
		"gizmos:crab_trap":		"file(entities/gizmos/crab_trap)",

		"jobs:index":	"file(jobs/index.json)",
		"jobs:fisher":	"file(jobs/fisher/fisher_description.json)",
		"fisher:rod":		"file(jobs/fisher/fisher_rod/fisher_rod.json)",
		"fisher:talisman":	"file(jobs/fisher/fisher_bucket/fisher_bucket_talisman.json)",

		"mixins:encounter:octopus_raid":	"file(mixins/encounter/mixin_octopus_raid.json)",
		"mixins:encounter:cocoling_raid":	"file(mixins/encounter/mixin_cocoling_raid.json)",

		"mixins:palm_tree":	"file(mixins/palm_tree)",
		"mixins:spice":		"file(mixins/spice)",

		"monsters:cocoling":		"file(entities/monsters/cocoling)",
		"monsters:cocoling_spawner":"file(entities/monsters/cocoling_spawner)",
		"monsters:fake_container":	"file(entities/monsters/fake_container)",
		"monsters:octopus":			"file(entities/monsters/octopus)",

		"monster_tuning:forest:easy_cocoling":	"file(data/monster_tuning/forest/easy_cocoling.json)",
		"monster_tuning:forest:giant_cocoling":	"file(data/monster_tuning/forest/giant_cocoling.json)",
		"monster_tuning:forest:easy_octopus":	"file(data/monster_tuning/forest/easy_octopus.json)",
		"monster_tuning:forest:medium_octopus":	"file(data/monster_tuning/forest/medium_octopus.json)",
		"monster_tuning:forest:giant_octopus":	"file(data/monster_tuning/forest/giant_octopus.json)",
		"monster_tuning:forest:insane_octopus":	"file(data/monster_tuning/forest/insane_octopus.json)",

		"outfit:beach_head":	"file(entities/outfit/beach_head)",
		"outfit:tricorn_hat":	"file(entities/outfit/tricorn_hat)",
		"outfit:visitor":		"file(entities/outfit/visitor_outfit)",

		"resources:hot_rock":	"file(entities/resources/hot_rock)",
		"resources:pearl":		"file(entities/resources/pearl)",
		"resources:pearl:black":"file(entities/resources/black_pearl)",
		"resources:spice:red":	"file(entities/resources/spice/red_spice.json)",
		"resources:spice:green":"file(entities/resources/spice/green_spice.json)",
		"resources:spice:blue":	"file(entities/resources/spice/blue_spice.json)",
		"resources:spice:old":	"file(entities/resources/spice/old_spice.json)",

		"town_names": "file(services/server/population/data/archipelago_town_names.json)",

		"toys:beachball":"file(entities/toys/beachball)",

		"traits:passion_fisher":"file(data/traits/passion_fisher/passion_fisher_trait.json)",

		"trees:bend_palm:large":"file(entities/trees/bend_palm_tree/large_bend_palm_tree)",
		"trees:bend_palm:small":"file(entities/trees/bend_palm_tree/small_bend_palm_tree)",
		"trees:dranden:small":	"file(entities/trees/dranden)",
		"trees:palm:large":		"file(entities/trees/palm_tree/large_palm_tree)",
		"trees:palm:small":		"file(entities/trees/palm_tree/small_palm_tree)",
		"trees:palm:sapling":	"file(entities/trees/palm_tree/sapling_palm_tree)",
		"trees:papaya":			"file(entities/trees/papaya)",
		"trees:smalea:small":	"file(entities/trees/smalea)",

		"ui:input_box:fish_filters": "file(ui/data/input_box_fish_filters.json)",
		"ui:input_box:food_bin_filters": "file(ui/data/input_box_food_bin_filters.json)",

		"weapons:bubble_shot":	"file(entities/weapons/bubble_shot)",
		"weapons:crab_pincer":	"file(entities/weapons/crab_pincer)",
		"weapons:slap_fish":	"file(entities/weapons/slap_fish)"
	},
	"deprecated_aliases": {
		"critters:fish":		"file(entities/critters/fish)",
		"gizmos:float_bobber":	"file(entities/gizmos/float_bobber)",
		"fisher:bucket":	"file(jobs/fisher/fisher_bucket/fisher_bucket.json)"
	},
	"mixintos": {
		"stonehearth:biome:index": "file(data/biome/index.json)",
		"stonehearth:terrain_blocks" : "file(data/terrain/terrain_blocks.json)",

		"stonehearth:build:brushes": "file(data/build/building_brushes.json)",

		"stonehearth:data:gm_index": "archipelago_biome:data:gm_index",
		"stonehearth/data/gm/campaigns/trader/arcs/encounters/tier_2_shops/bakery_shop.json":"file(data/gm/campaigns/trader/arcs/encounters/tier_2_shops/bakery_shop.json)",
		"rayyas_children/data/gm/campaigns/trader/arcs/encounters/tier_2_shops/bakery_shop.json":"file(data/gm/campaigns/trader/arcs/encounters/tier_2_shops/bakery_shop.json)",
		"stonehearth:gm:campaigns:arcs:ambient_threats": "file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/ambient_threats_arc.json)",
		"stonehearth/data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/randomize_advanced_threats.json":"file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/randomize_advanced_threats.json)",
		"stonehearth/data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/very_easy_raids.json":"file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/very_easy_raids.json)",
		"stonehearth/data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/easy_raids.json":		"file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/easy_raids.json)",
		"stonehearth/data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/hard_raids.json":		"file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/hard_raids.json)",
		"stonehearth/data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/insane_raids.json":	"file(data/gm/campaigns/ambient_threats/arcs/trigger/ambient_threats/encounters/trash_mobs/raid_difficulty/insane_raids.json)",

		"stonehearth:data:player_task_groups": "file(services/server/population/data/player_task_groups.json)",

		"stonehearth/data/ui/start_menu.json":"file(data/ui/start_menu.json)",

		"stonehearth:farmer:all_crops": "file(services/server/farming/data/all_crops.json)",

		"stonehearth:jobs:index": "archipelago_biome:jobs:index",
		"stonehearth/jobs/blacksmith/recipes/recipes.json":	"file(jobs/blacksmith/recipes)",
		"stonehearth/jobs/carpenter/recipes/recipes.json":	"file(jobs/carpenter/recipes)",
		"stonehearth/jobs/cook/recipes/recipes.json":		"file(jobs/cook/recipes)",
		"stonehearth/jobs/engineer/recipes/recipes.json":	"file(jobs/engineer/recipes)",
		"stonehearth/jobs/herbalist/recipes/recipes.json":	"file(jobs/herbalist/recipes)",
		"stonehearth/jobs/potter/recipes/recipes.json":		"file(jobs/potter/recipes)",
		"stonehearth/jobs/weaver/recipes/recipes.json":		"file(jobs/weaver/recipes)",

		"stonehearth:kingdoms:ascendancy":			"archipelago_biome:town_names",
		"rayyas_children:kingdoms:rayyas_children":	"archipelago_biome:town_names",
		"stonehearth:kingdoms:forest":"file(services/server/population/data/forest_population.json)",

		"stonehearth:resources:wood:palm_log":"file(entities/resources/wood/palm_log)",

		"stonehearth:traits_index":"file(data/traits/traits_index.json)",

		"stonehearth:ui:input_box:filters": "file(ui/data/input_box_filters.json)",

		"stonehearth/locales/pt-BR.json" : "file(locales/pt-BR.json)",

		"brewerymod/manifest.json":"file(modding_mods/brewerymod/manifest.json)"
	},
	"functions": {
		"generate_town_name": {
			"controller": "file(call_handlers/population_call_handler.lua)",
			"endpoint": "server"
		}
	},
	"overrides": {
		"stonehearth/data/rigs/entities/humans/animations/female/fishing_start.json":	"file(data/rigs/entities/humans/animations/female/fishing_start.json)",
		"stonehearth/data/rigs/entities/humans/animations/female/fishing_middle.json":	"file(data/rigs/entities/humans/animations/female/fishing_middle.json)",
		"stonehearth/data/rigs/entities/humans/animations/female/fishing_end.json":		"file(data/rigs/entities/humans/animations/female/fishing_end.json)",
		"stonehearth/data/rigs/entities/humans/animations/male/fishing_start.json":	"file(data/rigs/entities/humans/animations/male/fishing_start.json)",
		"stonehearth/data/rigs/entities/humans/animations/male/fishing_middle.json":"file(data/rigs/entities/humans/animations/male/fishing_middle.json)",
		"stonehearth/data/rigs/entities/humans/animations/male/fishing_end.json":	"file(data/rigs/entities/humans/animations/male/fishing_end.json)",
		"stonehearth/data/rigs/entities/humans/effects/emote_watch_fish.json":	"file(data/rigs/entities/humans/effects/emote_watch_fish.json)",
		"stonehearth/data/rigs/entities/humans/effects/fishing_start.json":	"file(data/rigs/entities/humans/effects/fishing_start.json)",
		"stonehearth/data/rigs/entities/humans/effects/fishing_middle.json":"file(data/rigs/entities/humans/effects/fishing_middle.json)",
		"stonehearth/data/rigs/entities/humans/effects/fishing_end.json":	"file(data/rigs/entities/humans/effects/fishing_end.json)",

		"stonehearth/ui/shell/select_settlement/map.js": "file(ui/shell/select_settlement/map.js)",
		"stonehearth/ui/shell/select_settlement/select_settlement.js": "file(ui/shell/select_settlement/select_settlement.js)"
	},
	"controllers": {
		"class:fisher": "file(jobs/fisher/fisher.lua)",
		"game_master:util:choose_water_location_outside_town": "file(services/server/game_master/controllers/util/choose_water_location_outside_town.lua)"
	},
	"components": {
		"dock":				"file(components/dock/dock.lua)",
		"explosive":		"file(components/explosive/explosive.lua)",
		"fake_container":	"file(components/fake_container/fake_container.lua)",
		"crab_spawner":		"file(components/crab_spawner/crab_spawner.lua)",
		"fish_spawner":		"file(components/fish_spawner/fish_spawner.lua)",
		"need_water":		"file(components/need_water/need_water.lua)",
		"wave":				"file(components/wave/wave.lua)"
	},
	"ui":{
		"less":[
			"file(jobs/fisher/skin/workshop.less)",
			"file(ui/shell/select_settlement/select_settlement.less)"
		]
	}
}